Practical 2 (Pass 2 of 2 pass assembler)

`pass2:of assembler information generated by pass 1 of assembler such as literal,symbol,pool and process the intermediate file to generate the machine language program
`Assembler directive(AD):class statement no machine code will be generated by pass 2 therefore it AD is found in input file the nothing is written in output file 
`LTORG:Assembler directive is found in input file then literal constant in current literal pool will be assigned the location
`Imperative statement:pass 2 will generate machine language code if is statement is found in input file then pass 2 will write its location counter,machine op code register constant and adress
 of symbol or literal 
`Declarative class statement (DL):no of machine code will be generated DC(DL,01) only constant value will be stored in the machine language code 